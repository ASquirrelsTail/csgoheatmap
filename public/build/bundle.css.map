{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\HeatMap.svelte",
    "..\\..\\Toasts.svelte",
    "..\\..\\Upload.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Upload from './svelte/Upload.svelte';\n\timport HeatMap from './svelte/HeatMap.svelte';\n\timport Filters from './svelte/Filters.svelte';\n\timport Toasts from './svelte/Toasts.svelte';\n</script>\n\n<h1>CSGO Scopes</h1>\n\n<hr>\n\n<main>\n\t<Upload />\n\t<Filters />\n\n\t<div>\n\t  <HeatMap />\n\t</div>\n</main>\n\n<Toasts />\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tmax-width: 1200px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\tpadding-left: 1rem;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t\tmargin: 0;\n\t}\n\n\thr {\n\t\tmargin-top: 0;\n\t}\n</style>",
    "<script>\r\n  import simpleheat from 'simpleheat';\r\n  import { onMount } from 'svelte';\r\n  import mapData from '../mapdata.js';\r\n  import { points, mapName } from '../store.js'\r\n\r\n  let canvas;\r\n  let heat;\r\n\r\n  let displaySetting = 'heat'\r\n  let gain = {heat: 3, shots: 8};\r\n\r\n  let scale = 10;\r\n  let offsetX = 204;\r\n  let offsetY = 387;\r\n\r\n  function translateCoords(position) {\r\n    return [Math.floor(position[0]/scale + offsetX),\r\n            Math.floor(-position[1]/scale + offsetY)]\r\n  }\r\n\r\n  onMount(() => {\r\n    heat = simpleheat(canvas);\r\n    heat.radius(5, 2);\r\n    heat.max(gain);\r\n  });\r\n\r\n  function drawPoints() {\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = 'white';\r\n    ctx.globalAlpha = 1;\r\n    ctx.globalCompositeOperation = 'source-over';\r\n    ctx.clearRect(0, 0, 500, 500);\r\n    $points.forEach(point => {\r\n      ctx.fillRect(...translateCoords(point.pp), 1, 1);\r\n    });\r\n  }\r\n\r\n  function drawShots() {\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.globalCompositeOperation = 'lighter';\r\n    ctx.lineWidth = 1;\r\n    ctx.clearRect(0, 0, 500, 500);\r\n    $points.forEach(point => {\r\n      ctx.globalAlpha = (point.d ? Math.max(point.d/100, 1) : 1) / gain.shots;\r\n      const playerPos = translateCoords(point.pp);\r\n      if (point.ap) {\r\n        const attackerPos = translateCoords(point.ap);\r\n        const gradient = ctx.createLinearGradient(...playerPos, ...attackerPos);\r\n        gradient.addColorStop('0', '#f73503');\r\n        gradient.addColorStop('0.5', '#d8d50f');\r\n        gradient.addColorStop('1' ,'#19c917');\r\n        ctx.strokeStyle = gradient;\r\n        ctx.beginPath();\r\n        ctx.moveTo(...attackerPos);\r\n        ctx.lineTo(...playerPos);\r\n        ctx.stroke();\r\n      } else {\r\n        // Draw grenades as Xs\r\n        ctx.strokeStyle = '#f73503';\r\n        ctx.beginPath();\r\n        ctx.moveTo(playerPos[0] - 2, playerPos[1] - 2);\r\n        ctx.lineTo(playerPos[0] + 2, playerPos[1] + 2);\r\n        ctx.moveTo(playerPos[0] + 2, playerPos[1] - 2);\r\n        ctx.lineTo(playerPos[0] - 2, playerPos[1] + 2);\r\n        ctx.stroke();\r\n      }\r\n    });\r\n  }\r\n\r\n  $: if (heat && $points) { // If points changes redraw\r\n    if ($mapName && mapData[$mapName]) { // Update scale and offset\r\n        scale = mapData[$mapName].s;\r\n        offsetX = mapData[$mapName].x;\r\n        offsetY = mapData[$mapName].y;\r\n      }\r\n    if (displaySetting === 'heat') {\r\n      heat.data($points.map(point => [...translateCoords(point.pp),\r\n                                      point.d ? Math.max(point.d/100, 1) : 1]));\r\n      heat.draw();\r\n    } else if (displaySetting === 'points') drawPoints();\r\n    else drawShots();\r\n  }\r\n\r\n  $: if (heat) {\r\n    heat.max(gain.heat); // If gain changes redraw\r\n    if (displaySetting === 'heat') heat.draw();\r\n    if (displaySetting === 'shots') drawShots();\r\n  }\r\n\r\n</script>\r\n\r\n<div>\r\n  <canvas width=500 height=500 bind:this={canvas}\r\n  style=\"background-image: {mapData[$mapName] ? `url(./images/${$mapName}.jpg)` : 'none'};\"></canvas>\r\n</div>\r\n\r\n<div class=\"settings\">\r\n  <select name=\"display\" bind:value={displaySetting}>\r\n    <option value=\"heat\">Heatmap</option>\r\n    <option value=\"shots\">Shots</option>\r\n    <option value=\"points\">Points</option>\r\n  </select>\r\n  <button on:click=\"{() => gain[displaySetting] += 1}\" disabled=\"{displaySetting === 'points'}\">\r\n    Gain Down\r\n  </button>\r\n  <button on:click=\"{() => gain[displaySetting] = Math.max(gain[displaySetting] - 1, 2)}\"\r\n     disabled=\"{displaySetting === 'points'}\">\r\n    Gain Up\r\n  </button>\r\n  <button on:click=\"{() => gain[displaySetting] = displaySetting === 'heat' ? 3 : 8}\"\r\n    disabled=\"{displaySetting === 'points'}\">\r\n    Gain Reset\r\n  </button>\r\n</div>\r\n\r\n<div id=\"scales\">\r\n  <label for=\"scale\">Scale:</label><input type=\"number\" id=\"scale\" bind:value={scale}>\r\n  <label for=\"offset-x\">Offset X:</label><input type=\"number\" id=\"offset-x\" bind:value={offsetX}>\r\n  <label for=\"offset-y\">Offset Y:</label><input type=\"number\" id=\"offset-y\" bind:value={offsetY}>\r\n  <label for=\"gain\">Gain:</label><input type=\"number\" id=\"gain\" bind:value={gain}>\r\n</div>\r\n\r\n<style>\r\n  canvas {\r\n    background-size: cover;\r\n    background-color: black;\r\n    border-radius: 1rem;\r\n  }\r\n\r\n  #scales {\r\n    display: none;\r\n  }\r\n\r\n  #scales input {\r\n    width: 5em;\r\n    margin-right: 1em;\r\n    text-align: center;\r\n  }\r\n\r\n  #scales label {\r\n    display: inline-block;\r\n    padding-right: 0.3em;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { fade, fly } from 'svelte/transition';\r\n  import { toasts } from '../store.js';\r\n</script>\r\n\r\n<div class=\"toast-container\">\r\n  {#each $toasts as toast (toast)}\r\n    <div class=\"toast {toast.type}\" in:fly=\"{{ y: 200, duration: 300 }}\" out:fade>\r\n      {toast.message}\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .toast-container {\r\n    position: fixed;\r\n    bottom: 0px;\r\n    right: 0px;\r\n    padding-right: 0.2rem;\r\n  }\r\n</style>",
    "<script>\r\n  import parseFile from '../utils/parseFile.js';\r\n  import { parsedFiles, mapName, toasts } from '../store.js'\r\n  \r\n  let form;\r\n  let files;\r\n  let parsing = false;\r\n\r\n  function addFiles() {\r\n    parsing = true;\r\n    const filePromises = [...files]\r\n      .filter(file => !$parsedFiles.some(parsed => parsed.fileName === file.name)) // Check files haven't already been parsed, then parse them\r\n      .map(file => parseFile(file));\r\n\r\n    if (filePromises.length < files.length)\r\n      toasts.push(`${files.length - filePromises.length} demos already parsed.`, 'success');\r\n    if (filePromises.length > 0) {\r\n      toasts.push(`Parsing ${filePromises.length} files...`, 'success');\r\n\r\n      filePromises.forEach(filePromise => filePromise.then(file => {\r\n        $parsedFiles.push(file);\r\n        $parsedFiles = $parsedFiles;\r\n        toasts.push(`Successfuly finished parsing ${file.fileName}.`, 'success');\r\n      }));\r\n      Promise.allSettled(filePromises)\r\n        .then(finishedFiles => {\r\n          parsing = false;\r\n          form.reset();\r\n\r\n          const succededFiles = finishedFiles.filter(result => result.status === 'fulfilled').length;\r\n          const failedFiles = finishedFiles.length - succededFiles;\r\n          toasts.push(`Successfuly parsed ${succededFiles} files.`, 'success');\r\n          if (failedFiles) toasts.push(`Failed to parse ${failedFiles} files.`, 'error');\r\n\r\n          // Store all/updated parsed files to storage\r\n          localStorage.setItem('parsedFiles', JSON.stringify($parsedFiles));\r\n        });\r\n    } else {\r\n      parsing = false;\r\n      form.reset();\r\n    }\r\n    \r\n  }\r\n\r\n</script>\r\n\r\n<form id=\"upload-form\" class:spinner={parsing} bind:this={form}>\r\n  <label for=\"file-upload\">Upload demo files</label>\r\n  <input type=\"file\" accept=\".dem\" id=\"file-upload\" multiple\r\n    bind:files disabled={parsing} on:change={addFiles}>\r\n  <button on:click|preventDefault=\"{() => form.reset()}\" disabled={parsing}>Clear</button>\r\n</form>\r\n\r\n<style>\r\n  #upload-form {\r\n    position: relative;\r\n  }\r\n\r\n  @keyframes pulse {\r\n    from {\r\n      width: 2em;\r\n      height: 2em;\r\n    }\r\n\r\n    to {\r\n      width: 5em;\r\n      height: 5em;\r\n    }\r\n  }\r\n\r\n  #upload-form.spinner:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 4em;\r\n    height: 4em;\r\n    border-radius: 50%;\r\n    background-color: rgba(100, 100, 100, 0.5);\r\n    transform: translate(-50%, -50%);\r\n    animation-duration: 0.4s;\r\n    animation-name: pulse;\r\n    animation-iteration-count: infinite;\r\n    animation-direction: alternate;\r\n    animation-timing-function: ease-in-out;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AAuBC,IAAI,eAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,eAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,YAAY,CAAE,IAAI,CAClB,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,CAAC,AACV,CAAC,AAED,EAAE,eAAC,CAAC,AACH,UAAU,CAAE,CAAC,AACd,CAAC;ACoFA,MAAM,8BAAC,CAAC,AACN,eAAe,CAAE,KAAK,CACtB,gBAAgB,CAAE,KAAK,CACvB,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,OAAO,8BAAC,CAAC,AACP,OAAO,CAAE,IAAI,AACf,CAAC,AAED,sBAAO,CAAC,KAAK,eAAC,CAAC,AACb,KAAK,CAAE,GAAG,CACV,YAAY,CAAE,GAAG,CACjB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,sBAAO,CAAC,KAAK,eAAC,CAAC,AACb,OAAO,CAAE,YAAY,CACrB,aAAa,CAAE,KAAK,AACtB,CAAC;ACjID,gBAAgB,cAAC,CAAC,AAChB,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,GAAG,CACV,aAAa,CAAE,MAAM,AACvB,CAAC;ACmCD,YAAY,eAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,WAAW,oBAAM,CAAC,AAChB,IAAI,AAAC,CAAC,AACJ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACb,CAAC,AAED,EAAE,AAAC,CAAC,AACF,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACb,CAAC,AACH,CAAC,AAED,YAAY,uBAAQ,OAAO,AAAC,CAAC,AAC3B,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC1C,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,kBAAkB,CAAE,IAAI,CACxB,cAAc,CAAE,oBAAK,CACrB,yBAAyB,CAAE,QAAQ,CACnC,mBAAmB,CAAE,SAAS,CAC9B,yBAAyB,CAAE,WAAW,AACxC,CAAC"
}