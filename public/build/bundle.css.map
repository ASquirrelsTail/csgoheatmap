{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Filters.svelte",
    "..\\..\\HeatMap.svelte",
    "..\\..\\Toasts.svelte",
    "..\\..\\Upload.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Upload from './svelte/Upload.svelte';\n\timport Filters from './svelte/Filters.svelte';\n\timport Toasts from './svelte/Toasts.svelte';\n</script>\n\n<header>\n\t<h1>CSGO Scopes</h1>\n\t<div>\n\t\t<Upload />\n\t</div>\n</header>\n<main>\n\t<Filters />\n\t\n</main>\n\n<Toasts />\n\n<style>\n\tmain {\n\t\tmax-width: 800px;\n\t\tmargin: 0 auto;\n\t}\n\n\theader {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tborder-bottom: 2px solid #273233;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\tpadding-left: 1rem;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 3em;\n\t\tfont-weight: 100;\n\t\tmargin: 0;\n\t}\n\n\thr {\n\t\tmargin-top: 0;\n\t}\n\n\n</style>",
    "<script>\r\n  import HeatMap from './HeatMap.svelte';\r\n  import { parsedFiles, points, mapName} from '../store.js'\r\n  import mapData from '../mapdata.js';\r\n\r\n  let selectedFiles = [];\r\n  let filesToFilter = [];\r\n  let maps = new Set();\r\n  let players = [];\r\n  let selectedPlayer;\r\n  let group = 0;\r\n\r\n  let metric = 2;\r\n  let team = false;\r\n\r\n  let total = 0;\r\n  let games = 0;\r\n  let wins = 0;\r\n  let rounds = 0;\r\n  let roundWins = 0;\r\n\r\n  function runFilters() {\r\n    const metricSet = metric % 2 ? 'hits' : 'deaths';\r\n    const dealt = !Math.floor(metric / 2);\r\n    const role = dealt ? 'a' : 'p';\r\n\r\n    const filteredFiles = filesToFilter.filter(file => file.mapName === $mapName &&\r\n                              (!selectedPlayer || selectedPlayer in file.players));\r\n    \r\n    // If a specific player's team or opponents are selected\r\n    if (selectedPlayer && group > 0) {\r\n      $points = [].concat(...filteredFiles.map(file => {\r\n        let playerTeam;\r\n        if (group === 1) playerTeam = file.players[selectedPlayer].team;\r\n        else playerTeam = (file.players[selectedPlayer].team + 1) % 2;\r\n        let teamPlayers = Object.keys(file.players)\r\n                                .filter(playerId => file.players[playerId].team === playerTeam)\r\n                                .map(playerId => parseInt(playerId));\r\n        if (team === false) // Use all team data\r\n          return file[metricSet][0].concat(file[metricSet][1])\r\n                                   .filter(event => teamPlayers.includes(event[role]));\r\n        else // Select team\r\n          return file[metricSet][(dealt + team) % 2].filter(event => teamPlayers.includes(event[role])); \r\n      }));\r\n    } else {\r\n      // Select events type, deaths/hits and team, t/ct/all\r\n      let events;\r\n      if (team === false) // Use all team data\r\n        events = filteredFiles.map(file => file[metricSet][0].concat(file[metricSet][1]));\r\n      else // Select team\r\n        events = filteredFiles.map(file => file[metricSet][(dealt + team) % 2]); // Invert team if we are looking at damage dealt\r\n      if (selectedPlayer) $points = [].concat(...events).filter(event => event[role] === selectedPlayer);\r\n      else $points = [].concat(...events)\r\n    }\r\n    \r\n    // Pull stats\r\n    total = $points.reduce((acc, point) => acc + (point.d ? point.d : 1), 0);\r\n    games = filteredFiles.length;\r\n    if (!selectedPlayer) {\r\n      rounds = filteredFiles.reduce((acc, game) => acc + game.rounds, 0);\r\n      wins = false;\r\n      roundWins = false;\r\n    } else {\r\n      wins = filteredFiles.reduce((acc, game) =>\r\n                ((game.players[selectedPlayer].team === game.winner && group !== 2) ||\r\n                 (game.players[selectedPlayer].team !== game.winner && group === 2)) ?\r\n                acc + 1 : acc, 0);\r\n      if (team === false) {\r\n        rounds = filteredFiles.reduce((acc, game) => acc + game.rounds, 0);\r\n        roundWins = filteredFiles.reduce((acc, game) => {\r\n          let playerTeam;\r\n          if (group === 2) playerTeam = (game.players[selectedPlayer].team + 1) % 2;\r\n          else playerTeam = game.players[selectedPlayer].team;\r\n          return game.scores[playerTeam].ct + game.scores[playerTeam].t + acc;\r\n        }, 0);\r\n      } else {\r\n        rounds = filteredFiles.reduce((acc, game) => {\r\n          if (game.rounds < 15) {\r\n            if ((team === game.players[selectedPlayer].team && group !== 2) ||\r\n                (team !== game.players[selectedPlayer].team && group === 2))\r\n              return acc + game.rounds;\r\n            else return acc;\r\n          }\r\n          if ((team !== game.players[selectedPlayer].team && group !== 2) ||\r\n              (team === game.players[selectedPlayer].team && group === 2))\r\n            return 15 + acc;\r\n          else return game.rounds - 15 + acc;\r\n        }, 0);\r\n        roundWins = filteredFiles.reduce((acc, game) => {\r\n          let playerTeam;\r\n          if (group === 2) playerTeam = (game.players[selectedPlayer].team + 1) % 2;\r\n          else playerTeam = game.players[selectedPlayer].team;\r\n          return (team === 1 ? game.scores[playerTeam].ct : game.scores[playerTeam].t) + acc;\r\n        }, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  $: {\r\n    filesToFilter = selectedFiles.length ? selectedFiles : $parsedFiles;\r\n    maps = new Set(filesToFilter.map(file => file.mapName));\r\n    if ((!$mapName || !maps.has($mapName)) && filesToFilter.length > 0) $mapName = filesToFilter[0].mapName;\r\n    players = Object.entries(Object.assign({}, ...filesToFilter.filter(file => file.mapName === $mapName)\r\n                                                            .map(file => file.players)))\r\n      .map(player => { return {id: parseInt(player[0]), name: player[1].name}})\r\n      .filter(player => player.id > 40);\r\n    if (!players.some(player => player.id === selectedPlayer)) selectedPlayer = false;\r\n    runFilters();\r\n  }\r\n\r\n</script>\r\n\r\n<div id=\"file-list\" class=\"group\">\r\n  <label for=\"files\">Demo Files:</label>\r\n  <select multiple id=\"files\" bind:value={selectedFiles}>\r\n    {#each $parsedFiles as file}\r\n      <option value={file}>\r\n        {file.fileName} - {file.mapName}\r\n      </option>\r\n    {:else}\r\n    <option value=\"\" disabled=\"\" class=\"empty\">\r\n      No demo files - Click and drag or select upload demo files to begin.\r\n    </option>\r\n    {/each}\r\n  </select>\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <div id=\"side-bar\">\r\n    <div class=\"group\">\r\n      <label for=\"map\">Map:</label>\r\n      <select id=\"map\" bind:value={$mapName}>\r\n        {#each Object.keys(mapData) as map}\r\n          <option value={map} disabled={!maps.has(map)}>\r\n            {map}\r\n          </option>\r\n        {/each}\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"group\">\r\n      <label for=\"players\">Players:</label>\r\n      <select id=\"players\" bind:value={selectedPlayer}>\r\n        <option value={false}>All</option>\r\n        {#each players as player}\r\n          <option value={player.id}>\r\n            {player.name}\r\n          </option>\r\n        {/each}\r\n      </select>\r\n      <div class=\"sub-group\">\r\n        <button on:click=\"{() => {group = 0; runFilters()}}\" disabled={!selectedPlayer}\r\n        class:selected=\"{selectedPlayer && group === 0}\">Solo</button>\r\n        <button on:click=\"{() => {group = 1; runFilters()}}\" disabled={!selectedPlayer}\r\n          class:selected=\"{selectedPlayer && group === 1}\">Team</button>\r\n        <button on:click=\"{() => {group = 2; runFilters()}}\" disabled={!selectedPlayer}\r\n          class:selected=\"{selectedPlayer && group === 2}\">Opponents</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"group\">\r\n      <span class=\"label\">Metrics:</span>\r\n      <div class=\"v-sub-group\">\r\n        <button on:click=\"{() => {metric = 0; runFilters()}}\" class:selected=\"{metric === 0}\">\r\n          Kills\r\n        </button>\r\n        <button on:click=\"{() => {metric = 2; runFilters()}}\" class:selected=\"{metric === 2}\">\r\n          Deaths\r\n        </button>\r\n      </div>\r\n      <div class=\"v-sub-group\">\r\n        <button on:click=\"{() => {metric = 1; runFilters()}}\" class:selected=\"{metric === 1}\">\r\n          Damage Dealt\r\n        </button>\r\n        <button on:click=\"{() => {metric = 3; runFilters()}}\" class:selected=\"{metric === 3}\">\r\n          Damage Taken\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"group\">\r\n      <span class=\"label\">Team:</span>\r\n      <button on:click=\"{() => {team = 0; runFilters()}}\" class:selected=\"{team === 0}\">T</button>\r\n      <button on:click=\"{() => {team = 1; runFilters()}}\" class:selected=\"{team === 1}\">CT</button>\r\n      <button on:click=\"{() => {team = false; runFilters()}}\" class:selected=\"{team === false}\">All</button>\r\n    </div>\r\n    \r\n    <div class=\"group\" id=\"stats\">\r\n      <span class=\"label\">Stats:</span>\r\n      <div class=\"stat\">\r\n        <span class=\"no\">\r\n          {total}\r\n        </span>\r\n        total {['kills', 'damage dealt', 'deaths', 'damage taken'][metric]}\r\n      </div>\r\n      <div class=\"stat\">\r\n        <span class=\"no\">\r\n          {games}\r\n        </span>\r\n        games {#if wins !== false}({wins} win{wins !== 1 ? 's' : ''}){/if}\r\n      </div>\r\n      <div class=\"stat\">\r\n        <span class=\"no\">\r\n          {rounds}\r\n        </span>\r\n        rounds {#if roundWins !== false}({roundWins} win{roundWins !== 1 ? 's' : ''}){/if}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <HeatMap />\r\n</div>\r\n\r\n\r\n<style>\r\n  #file-list, #files {\r\n    width: 100%;\r\n  }\r\n\r\n  .empty {\r\n    text-align: center;\r\n  }\r\n\r\n  .container {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  #side-bar {\r\n    min-width: 280px;\r\n    max-width: 500px;\r\n    order: 3;\r\n    flex-shrink: 1;\r\n  }\r\n\r\n  @media only screen and (max-width: 820px) {\r\n    .container {\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    #side-bar {\r\n      order: 0;\r\n      flex-shrink: 0;\r\n      flex-grow: 2;\r\n    }\r\n  }\r\n\r\n  .group, .sub-group {\r\n    width: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .group {\r\n    margin-top: 0.8em;\r\n    border: 1px solid #273233;\r\n    border-radius: 0.2rem;\r\n    padding: 0 0.3rem;\r\n    padding-top: 0.7em;\r\n  }\r\n\r\n  .group select {\r\n    width: 100%;\r\n    margin-bottom: 0.3em;\r\n  }\r\n\r\n  .group button {\r\n    display: block;\r\n    flex-grow: 2;\r\n    margin-bottom: 0.3em;\r\n  }\r\n\r\n  .group button:not(:last-child) {\r\n    margin-right: 0.2em;\r\n  }\r\n\r\n  .group label, .group .label {\r\n    position: absolute;\r\n    top: -0.8em;\r\n    left: 0.5em;\r\n    padding: 0 0.2em;\r\n    background-color: #374a50;\r\n  }\r\n\r\n  .v-sub-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 2;\r\n  }\r\n\r\n  .v-sub-group:not(:last-child) {\r\n    margin-right: 0.2rem;\r\n  }\r\n\r\n  .v-sub-group button {\r\n    width: 100%;\r\n  }\r\n\r\n  #stats {\r\n    text-align: center;\r\n    flex-direction: column;\r\n    padding-bottom: 0.4em;\r\n  }\r\n\r\n  .stat {\r\n    font-size: 1.2em;\r\n  }\r\n\r\n  .stat .no {\r\n    font-size: 1.4em;\r\n    font-weight: bold;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import simpleheat from 'simpleheat';\r\n  import { onMount } from 'svelte';\r\n  import mapData from '../mapdata.js';\r\n  import { points, mapName } from '../store.js'\r\n\r\n  let canvas;\r\n  let heat;\r\n\r\n  let displaySetting = 'heat'\r\n  let gain = {heat: 3, shots: 8};\r\n\r\n  let scale = 10;\r\n  let offsetX = 204;\r\n  let offsetY = 387;\r\n\r\n  function translateCoords(position) {\r\n    return [Math.floor(position[0]/scale + offsetX),\r\n            Math.floor(-position[1]/scale + offsetY)]\r\n  }\r\n\r\n  onMount(() => {\r\n    // Set up simpleheat with canvas\r\n    heat = simpleheat(canvas);\r\n    heat.radius(5, 2);\r\n    heat.max(gain.heat);\r\n  });\r\n\r\n  function drawPoints() {\r\n    // Draw points as dots on canvas\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = 'white';\r\n    ctx.globalAlpha = 1;\r\n    ctx.globalCompositeOperation = 'source-over';\r\n    ctx.clearRect(0, 0, 500, 500);\r\n    $points.forEach(point => {\r\n      ctx.fillRect(...translateCoords(point.pp), 1, 1);\r\n    });\r\n  }\r\n\r\n  function drawShots() {\r\n    // Draw shots as lines on canvas\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.globalCompositeOperation = 'lighter';\r\n    ctx.lineWidth = 1;\r\n    ctx.clearRect(0, 0, 500, 500);\r\n\r\n    $points.forEach(point => {\r\n      ctx.globalAlpha = (point.d ? Math.max(point.d/100, 1) : 1) / gain.shots; // Adjust alpha based on a shot's damage if it has a damage property\r\n      const playerPos = translateCoords(point.pp);\r\n      if (point.ap) {\r\n        const attackerPos = translateCoords(point.ap);\r\n        // Create a gradient between the player and their attacker's positions\r\n        const gradient = ctx.createLinearGradient(...playerPos, ...attackerPos);\r\n        gradient.addColorStop('0', '#f73503');\r\n        gradient.addColorStop('0.5', '#d8d50f');\r\n        gradient.addColorStop('1' ,'#19c917');\r\n        ctx.strokeStyle = gradient;\r\n        // Draw the line\r\n        ctx.beginPath();\r\n        ctx.moveTo(...attackerPos);\r\n        ctx.lineTo(...playerPos);\r\n        ctx.stroke();\r\n      } else {\r\n        // Draw points without attacking players (eg. grenades and world deaths) as Xs\r\n        ctx.strokeStyle = '#f73503';\r\n        ctx.beginPath();\r\n        ctx.moveTo(playerPos[0] - 2, playerPos[1] - 2);\r\n        ctx.lineTo(playerPos[0] + 2, playerPos[1] + 2);\r\n        ctx.moveTo(playerPos[0] + 2, playerPos[1] - 2);\r\n        ctx.lineTo(playerPos[0] - 2, playerPos[1] + 2);\r\n        ctx.stroke();\r\n      }\r\n    });\r\n  }\r\n\r\n  $: if (heat && $points) { // If points changes redraw\r\n    if ($mapName && mapData[$mapName]) { // Update scale and offset\r\n        scale = mapData[$mapName].s;\r\n        offsetX = mapData[$mapName].x;\r\n        offsetY = mapData[$mapName].y;\r\n      }\r\n    if (displaySetting === 'heat') {\r\n      heat.data($points.map(point => [...translateCoords(point.pp),\r\n                                      point.d ? Math.max(point.d/100, 1) : 1]));\r\n      heat.draw();\r\n    } else if (displaySetting === 'points') drawPoints();\r\n    else drawShots();\r\n  }\r\n\r\n  $: if (heat) {\r\n    heat.max(gain.heat); // If gain changes redraw\r\n    if (displaySetting === 'heat') heat.draw();\r\n    if (displaySetting === 'shots') drawShots();\r\n  }\r\n\r\n</script>\r\n\r\n<div id=\"container\">\r\n  <canvas width=500 height=500 bind:this={canvas}\r\n  style=\"{mapData[$mapName] ? `background-image: url(./images/${$mapName}.jpg)` : ''};\"></canvas>\r\n  <div id=\"settings\">\r\n    <select name=\"display\" id=\"display-mode\" bind:value={displaySetting}>\r\n      <option value=\"heat\">Heatmap</option>\r\n      <option value=\"shots\">Shots</option>\r\n      <option value=\"points\">Points</option>\r\n    </select>\r\n    <button on:click=\"{() => gain[displaySetting] += 1}\" disabled=\"{displaySetting === 'points'}\">\r\n      Gain Down\r\n    </button>\r\n    <button on:click=\"{() => gain[displaySetting] = Math.max(gain[displaySetting] - 1, 2)}\"\r\n       disabled=\"{displaySetting === 'points'}\">\r\n      Gain Up\r\n    </button>\r\n    <button on:click=\"{() => gain[displaySetting] = displaySetting === 'heat' ? 3 : 8}\"\r\n      disabled=\"{displaySetting === 'points'}\">\r\n      Gain Reset\r\n    </button>\r\n  </div>\r\n  <div id=\"scales\">\r\n    <label for=\"scale\">Scale:</label><input type=\"number\" id=\"scale\" bind:value={scale}>\r\n    <label for=\"offset-x\">Offset X:</label><input type=\"number\" id=\"offset-x\" bind:value={offsetX}>\r\n    <label for=\"offset-y\">Offset Y:</label><input type=\"number\" id=\"offset-y\" bind:value={offsetY}>\r\n    <label for=\"gain\">Gain:</label><input type=\"number\" id=\"gain\" bind:value={gain}>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<style>\r\n  canvas {\r\n    background-size: cover;\r\n    background-color: black;\r\n    background-image: url('../images/blank.jpg');\r\n    border-radius: 1rem;\r\n  }\r\n\r\n  #container {\r\n    margin-top: 0.7rem;\r\n    margin-right: 0.7rem;\r\n    max-width: 500px;\r\n  }\r\n\r\n  #settings {\r\n    display: flex;\r\n  }\r\n\r\n  #settings button {\r\n    margin-left: 0.5rem;\r\n  }\r\n\r\n  #display-mode {\r\n    flex-grow: 2;\r\n  }\r\n\r\n  #scales {\r\n    display: none;\r\n  }\r\n\r\n  #scales input {\r\n    width: 5em;\r\n    margin-right: 1em;\r\n    text-align: center;\r\n  }\r\n\r\n  #scales label {\r\n    display: inline-block;\r\n    padding-right: 0.3em;\r\n  }\r\n</style>\r\n",
    "<script>\r\n  import { fade, fly } from 'svelte/transition';\r\n  import { toasts } from '../store.js';\r\n</script>\r\n\r\n<div id=\"toast-container\">\r\n  {#each $toasts as toast (toast)}\r\n    <div class=\"toast {toast.type}\" role=\"status\" in:fly=\"{{ y: 200, duration: 300 }}\" out:fade>\r\n      {toast.message}\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  #toast-container {\r\n    position: fixed;\r\n    bottom: 0px;\r\n    right: 0px;\r\n    padding-right: 0.2rem;\r\n  }\r\n</style>",
    "<script>\r\n  import parseFile from '../utils/parseFile.js';\r\n  import { parsedFiles, mapName, toasts } from '../store.js'\r\n\r\n  let dragging = false;\r\n  let parsing = false;\r\n\r\n  let form;\r\n\r\n  function addFiles(files) {\r\n    parsing = true;\r\n    const filePromises = [...files]\r\n      .filter(file => !$parsedFiles.some(parsed => parsed.fileName === file.name)) // Check files haven't already been parsed, then parse them\r\n      .map(file => parseFile(file));\r\n\r\n    // If fewer files are to be parsed then were submitted, then the rest are already parsed\r\n    if (filePromises.length < files.length)\r\n      toasts.push(`${files.length - filePromises.length} demos already parsed.`, 'success');\r\n\r\n    if (filePromises.length > 0) {\r\n      toasts.push(`Parsing ${filePromises.length} files...`, 'success');\r\n\r\n      // As each file is finished push it to the stored parsed files and notify the user\r\n      filePromises.forEach(filePromise => filePromise.then(file => {\r\n        $parsedFiles.push(file);\r\n        $parsedFiles = $parsedFiles;\r\n        toasts.push(`Successfully finished parsing ${file.fileName}.`, 'success');\r\n      }).catch(error => toasts.push(error, 'error')));\r\n      // Once all files are finished reset the file input, count how many succeded/failed and inform the user then update local storage\r\n      Promise.allSettled(filePromises)\r\n        .then(finishedFiles => {\r\n          parsing = false;\r\n          form.reset();\r\n\r\n          const succededFiles = finishedFiles.filter(result => result.status === 'fulfilled').length;\r\n          const failedFiles = finishedFiles.length - succededFiles;\r\n          toasts.push(`Successfully parsed ${succededFiles} files.`, 'success');\r\n          if (failedFiles) toasts.push(`Failed to parse ${failedFiles} files.`, 'error');\r\n\r\n          // Store all/updated parsed files to storage\r\n          localStorage.setItem('parsedFiles', JSON.stringify($parsedFiles));\r\n        });\r\n    } else {\r\n      parsing = false;\r\n      form.reset();\r\n    }\r\n  }\r\n\r\n  function dropFiles(e) {\r\n    // Filters valid files and sends them to be parsed, if no valid files dropped, inform the user\r\n    dragging = false;\r\n    const validFiles = [...e.dataTransfer.files].filter(file => file.name.slice(-4) === '.dem');\r\n    if (validFiles.length > 0) addFiles(validFiles);\r\n    else toasts.push('Please select valid CSGO demo files ending in \".dem\".', 'error');\r\n  }\r\n\r\n</script>\r\n\r\n<svelte:body on:dragenter|preventDefault=\"{() => dragging = true}\"\r\n  on:dragover|preventDefault=\"{() => dragging = true}\"/>\r\n\r\n<form id=\"upload-form\" bind:this={form}>\r\n  <label for=\"file-upload\" class:spinner={parsing}>\r\n    Upload{#if parsing}ing{/if} demo files\r\n    <input type=\"file\" accept=\".dem\" id=\"file-upload\" multiple\r\n      disabled={parsing} on:change=\"{e => addFiles(e.target.files)}\">\r\n  </label>\r\n</form>\r\n\r\n{#if dragging}\r\n  <div id=\"drag-files\" on:dragleave|preventDefault=\"{() => dragging = false}\"\r\n    on:drop|preventDefault={dropFiles}>\r\n    <div id=\"drag-files-inner\">\r\n      <div id=\"drop-message\">\r\n        Drop .dem files to upload.\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n\r\n\r\n<style>\r\n  #upload-form {\r\n    position: relative;\r\n  }\r\n\r\n  label {\r\n    padding: 0.4em;\r\n    padding-top: 0.3em;\r\n    margin: 0 1em 0 0;\r\n    box-sizing: border-box;\r\n    border: 1px solid #666;\r\n    border-radius: 2px;\r\n    font-size: 1.2em;\r\n    color: #ccc;\r\n    background-color: #273233;\r\n    outline: none;\r\n  }\r\n\r\n  label:focus-within {\r\n    outline: -webkit-focus-ring-color auto 1px;\r\n  }\r\n\r\n  #file-upload {\r\n    width: 1px;\r\n    height: 1px;\r\n    opacity: 0;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  label.spinner {\r\n    color: #999;\r\n    background-color: #565656;\r\n  }\r\n\r\n  @keyframes dots {\r\n    0% {\r\n      content: '';\r\n    }\r\n    25% {\r\n      content: '.';\r\n    }\r\n    50% {\r\n      content: '..';\r\n    }\r\n    75% {\r\n      content: '...';\r\n    }\r\n  }\r\n\r\n  label.spinner:after {\r\n    display: inline-block;\r\n    content: '...';\r\n    margin-left: -0.3em;\r\n    width: 1em;\r\n    animation-duration: 1.2s;\r\n    animation-name: dots;\r\n    animation-iteration-count: infinite;\r\n  }\r\n\r\n  #drag-files {\r\n    position: fixed;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    z-index: 1000;\r\n    padding: 2rem\r\n  }\r\n\r\n  #drag-files-inner {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 2px solid #ccc;\r\n    border-radius: 1rem;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n  }\r\n\r\n  #drop-message {\r\n    font-size: 2.4em;\r\n  }\r\n\r\n  #drop-message:before {\r\n    content: '+';\r\n    display: block;\r\n    margin: -0.3em;\r\n    text-align: center;\r\n    font-size: 6em;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}